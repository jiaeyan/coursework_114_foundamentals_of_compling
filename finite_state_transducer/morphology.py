import fst
import fsmutils
'''
Jiajie Sven Yan
'''
class Parser():

	def __init__(self):
		pass

	def generate(self, analysis):
		"""Generate the morphologically correct word 

		e.g.
		p = Parser()
		analysis = ['p','a','n','i','c','+past form']
		p.generate(analysis) 
		---> 'panicked'
		"""
		f1=fst.FST('word_generator')
		for i in range(1,34):
			f1.add_state(str(i))
		f1.initial_state = '1'	
		f1.add_arc('1','2','w','w')
		f1.add_arc('2','3','a','a')
		f1.add_arc('3','4','n','n')
		f1.add_arc('4','5','t','t')
		f1.add_arc('5','6','+past form','ed')
		f1.add_arc('5','7','+present participle','ing')
		f1.add_arc('1','8','s','s')
		f1.add_arc('8','9','y','y')
		f1.add_arc('9','10','n','n')
		f1.add_arc('10','11','c','c')
		f1.add_arc('11','12','+past form','ed')
		f1.add_arc('11','13','+present participle','ing')
		f1.add_arc('1','14','p','p')
		f1.add_arc('14','15','a','a')
		f1.add_arc('15','16','n','n')
		f1.add_arc('16','17','i','i')
		f1.add_arc('17','18','c','c')
		f1.add_arc('18','19','+past form','ked')
		f1.add_arc('18','20','+present participle','king')
		f1.add_arc('1','21','h','h')
		f1.add_arc('21','22','a','a')
		f1.add_arc('22','23','v','v')
		f1.add_arc('23','24','o','o')
		f1.add_arc('24','25','c','c')
		f1.add_arc('25','26','+past form','ked')
		f1.add_arc('25','27','+present participle','king')
		f1.add_arc('1','28','l','l')
		f1.add_arc('28','29','i','i')
		f1.add_arc('29','30','c','c')
		f1.add_arc('30','31','k','k')
		f1.add_arc('31','32','+past form','ed')
		f1.add_arc('31','33','+present participle','ing')
		f1.set_final('6')
		f1.set_final('7')
		f1.set_final('12')
		f1.set_final('13')
		f1.set_final('19')
		f1.set_final('20')
		f1.set_final('26')
		f1.set_final('27')
		f1.set_final('32')
		f1.set_final('33')
		result=''.join(f1.transduce(analysis)[0])
		return result

	def parse(self, word):
		"""Parse a word morphologically want, sync, panic, havoc, and lick

		e.g. -ed and -ing
		p = Parser()   past form  \  present participle form
		word = ['p', 'a', 'n', 'i', 'c', 'k','e','d']
		p.parse(word)
		---> 'panic+past form'
		"""
		f2=fst.FST('lexicon')
		for i in range(1,56):
			f2.add_state(str(i))
		f2.initial_state = '1'
		f2.add_arc('1','2','w','w')
		f2.add_arc('2','3','a','a')
		f2.add_arc('3','4','n','n')
		f2.add_arc('4','5','t','t')
		f2.add_arc('5','6','e','^')
		f2.add_arc('6','7','d','d')
		f2.add_arc('7','8','','#')
		f2.add_arc('5','9','i','^')
		f2.add_arc('9','10','n','n')
		f2.add_arc('10','11','g','g')
		f2.add_arc('11','8','','#')
		f2.add_arc('1','12','s','s')
		f2.add_arc('12','13','y','y')
		f2.add_arc('13','14','n','n')
		f2.add_arc('14','15','c','c')
		f2.add_arc('15','16','e','^')
		f2.add_arc('16','17','d','d')
		f2.add_arc('17','18','','#')
		f2.add_arc('15','19','i','^')
		f2.add_arc('19','20','n','n')
		f2.add_arc('20','21','g','g')
		f2.add_arc('21','18','','#')
		f2.add_arc('1','22','p','p')
		f2.add_arc('22','23','a','a')
		f2.add_arc('23','24','n','n')
		f2.add_arc('24','25','i','i')
		f2.add_arc('25','26','c','c')
		f2.add_arc('26','27','k','^')
		f2.add_arc('27','28','e','e')
		f2.add_arc('28','29','d','d')
		f2.add_arc('29','30','','#')
		f2.add_arc('27','31','i','i')
		f2.add_arc('31','32','n','n')
		f2.add_arc('32','33','g','g')
		f2.add_arc('33','30','','#')
		f2.add_arc('1','34','h','h')
		f2.add_arc('34','35','a','a')
		f2.add_arc('35','36','v','v')
		f2.add_arc('36','37','o','o')
		f2.add_arc('37','38','c','c')
		f2.add_arc('38','39','k','^')
		f2.add_arc('39','40','e','e')
		f2.add_arc('40','41','d','d')
		f2.add_arc('41','42','','#')
		f2.add_arc('39','43','i','i')
		f2.add_arc('43','44','n','n')
		f2.add_arc('44','45','g','g')
		f2.add_arc('45','42','','#')
		f2.add_arc('1','46','l','l')
		f2.add_arc('46','47','i','i')
		f2.add_arc('47','48','c','c')
		f2.add_arc('48','49','k','k')
		f2.add_arc('49','50','e','^')
		f2.add_arc('50','51','d','d')
		f2.add_arc('51','52','','#')
		f2.add_arc('49','53','i','^')
		f2.add_arc('53','54','n','n')
		f2.add_arc('54','55','g','g')
		f2.add_arc('55','52','','#')
		f2.set_final('8')
		f2.set_final('18')
		f2.set_final('30')
		f2.set_final('42')
		f2.set_final('52')
		
		f3=fst.FST('rule')
		for i in range(1,53):
			f3.add_state(str(i))
		f3.initial_state = '1'
		f3.add_arc('1','2','p','p')
		f3.add_arc('2','3','a','a')
		f3.add_arc('3','4','n','n')
		f3.add_arc('4','5','i','i')
		f3.add_arc('5','6','c','c')
		f3.add_arc('6','7','^','')
		f3.add_arc('7','8','e','')
		f3.add_arc('8','9','d','+past form')
		f3.add_arc('9','10','#','')
		f3.add_arc('7','11','i','')
		f3.add_arc('11','12','n','')
		f3.add_arc('12','13','g','+present participle')
		f3.add_arc('13','10','#','')
		f3.add_arc('1','14','h','h')
		f3.add_arc('14','15','a','a')
		f3.add_arc('15','16','v','v')
		f3.add_arc('16','17','o','o')
		f3.add_arc('17','18','c','c')
		f3.add_arc('18','19','^','')
		f3.add_arc('19','20','e','')
		f3.add_arc('20','21','d','+past form')
		f3.add_arc('21','22','#','')
		f3.add_arc('19','23','i','')
		f3.add_arc('23','24','n','')
		f3.add_arc('24','25','g','+present participle')
		f3.add_arc('25','22','#','')
		f3.add_arc('1','26','l','l')
		f3.add_arc('26','27','i','i')
		f3.add_arc('27','28','c','c')
		f3.add_arc('28','29','k','k')
		f3.add_arc('29','30','^','')
		f3.add_arc('30','31','d','+past form')
		f3.add_arc('31','32','#','')
		f3.add_arc('30','33','n','')
		f3.add_arc('33','34','g','+present participle')
		f3.add_arc('34','32','#','')
		f3.add_arc('1','35','s','s')
		f3.add_arc('35','36','y','y')
		f3.add_arc('36','37','n','n')
		f3.add_arc('37','38','c','c')
		f3.add_arc('38','39','^','')
		f3.add_arc('39','40','d','+past form')
		f3.add_arc('40','41','#','')
		f3.add_arc('38','42','n','')
		f3.add_arc('42','43','g','+present participle')
		f3.add_arc('43','41','#','')
		f3.add_arc('1','44','w','w')
		f3.add_arc('44','45','a','a')
		f3.add_arc('45','46','n','n')
		f3.add_arc('46','47','t','t')
		f3.add_arc('47','48','^','')
		f3.add_arc('48','49','d','+past form')
		f3.add_arc('49','50','#','')
		f3.add_arc('47','51','n','')
		f3.add_arc('51','52','g','+present participle')
		f3.add_arc('52','50','#','')
		f3.set_final('10')
		f3.set_final('22')
		f3.set_final('32')
		f3.set_final('41')
		f3.set_final('50')
		
		output=''.join(fsmutils.compose(word,f2,f3)[0])
		return output
		'''output = ['p','a','n','i','c','+past form']
		return ''.join(output)'''
''''p=Parser()
print(p.generate(['l','i','c','k','+past form']))'''
